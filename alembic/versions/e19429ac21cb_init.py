"""init

Revision ID: e19429ac21cb
Revises: 
Create Date: 2025-10-26 00:18:20.290197

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'e19429ac21cb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sysdiagrams')
    op.drop_constraint(op.f('fk_consutas_turnos'), 'consultas', type_='foreignkey')
    op.create_foreign_key(None, 'consultas', 'turnos', ['id_turno'], ['id_turno'])
    op.alter_column('especialidades', 'sigla_especialidad',
               existing_type=sa.CHAR(length=1, collation='Modern_Spanish_CI_AS'),
               type_=sqlmodel.sql.sqltypes.AutoString(length=5),
               existing_nullable=False)
    op.add_column('medicos', sa.Column('create_at', sa.DateTime(), nullable=True))
    op.add_column('medicos', sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.drop_column('medicos', 'created_at')
    op.add_column('pacientes', sa.Column('id_pacientes', sa.Integer(), nullable=False))
    op.add_column('pacientes', sa.Column('create_at', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'pacientes', 'especialidades', ['especialidad'], ['id_especialidad'])
    op.drop_column('pacientes', 'created_at')
    op.drop_column('pacientes', 'id_paciente')
    op.alter_column('reviews', 'calificacion',
               existing_type=sa.SMALLINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.drop_constraint(op.f('fk_reviews_pacientes'), 'reviews', type_='foreignkey')
    op.drop_constraint(op.f('fk_reviews_medicos'), 'reviews', type_='foreignkey')
    op.create_foreign_key(None, 'reviews', 'medicos', ['id_medico'], ['id_medico'])
    op.create_foreign_key(None, 'reviews', 'pacientes', ['id_paciente'], ['id_pacientes'])
    op.drop_constraint(op.f('fk_turnos_paciente'), 'turnos', type_='foreignkey')
    op.create_foreign_key(None, 'turnos', 'pacientes', ['id_paciente'], ['id_pacientes'])
    op.drop_constraint(op.f('fk_users_roles'), 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'users', ['user_rol'], ['id_user'])
    op.alter_column('users_roles', 'rol',
               existing_type=sa.CHAR(length=1, collation='Modern_Spanish_CI_AS'),
               type_=sqlmodel.sql.sqltypes.AutoString(length=1),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users_roles', 'rol',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=1),
               type_=sa.CHAR(length=1, collation='Modern_Spanish_CI_AS'),
               existing_nullable=False)
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key(op.f('fk_users_roles'), 'users', 'users_roles', ['user_rol'], ['id_users_roles'])
    op.drop_constraint(None, 'turnos', type_='foreignkey')
    op.create_foreign_key(op.f('fk_turnos_paciente'), 'turnos', 'pacientes', ['id_paciente'], ['id_paciente'])
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.create_foreign_key(op.f('fk_reviews_medicos'), 'reviews', 'medicos', ['id_review'], ['id_medico'])
    op.create_foreign_key(op.f('fk_reviews_pacientes'), 'reviews', 'pacientes', ['id_paciente'], ['id_paciente'])
    op.alter_column('reviews', 'calificacion',
               existing_type=sa.Integer(),
               type_=sa.SMALLINT(),
               existing_nullable=False)
    op.add_column('pacientes', sa.Column('id_paciente', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('pacientes', sa.Column('created_at', sa.DATETIME(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'pacientes', type_='foreignkey')
    op.drop_column('pacientes', 'create_at')
    op.drop_column('pacientes', 'id_pacientes')
    op.add_column('medicos', sa.Column('created_at', sa.DATETIME(), autoincrement=False, nullable=True))
    op.drop_column('medicos', 'telefono')
    op.drop_column('medicos', 'create_at')
    op.alter_column('especialidades', 'sigla_especialidad',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=5),
               type_=sa.CHAR(length=1, collation='Modern_Spanish_CI_AS'),
               existing_nullable=False)
    op.drop_constraint(None, 'consultas', type_='foreignkey')
    op.create_foreign_key(op.f('fk_consutas_turnos'), 'consultas', 'turnos', ['id_consulta'], ['id_turno'])
    op.create_table('sysdiagrams',
    sa.Column('name', sa.NVARCHAR(length=128, collation='Modern_Spanish_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('principal_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('diagram_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('definition', mssql.VARBINARY(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('diagram_id', name=op.f('PK__sysdiagr__C2B05B61904E9D47'))
    )
    # ### end Alembic commands ###
