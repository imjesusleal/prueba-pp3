"""init

Revision ID: 5da72e078afd
Revises: 
Create Date: 2025-10-28 19:49:21.615826

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '5da72e078afd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documento_identificativo',
    sa.Column('id_documento', sa.Integer(), nullable=False),
    sa.Column('tipo_documento', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('descripcion_documento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id_documento'),
    sa.UniqueConstraint('tipo_documento')
    )
    op.create_table('especialidades',
    sa.Column('id_especialidad', sa.Integer(), nullable=False),
    sa.Column('sigla_especialidad', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id_especialidad'),
    sa.UniqueConstraint('sigla_especialidad')
    )
    op.create_table('users',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('user_rol', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_rol'], ['users.id_user'], ),
    sa.PrimaryKeyConstraint('id_user'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('users_roles',
    sa.Column('id_users_roles', sa.Integer(), nullable=False),
    sa.Column('rol', sqlmodel.sql.sqltypes.AutoString(length=1), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id_users_roles')
    )
    op.create_table('medicos',
    sa.Column('id_medico', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('documento_identificacion', sa.Integer(), nullable=False),
    sa.Column('especialidad', sa.Integer(), nullable=False),
    sa.Column('matricula', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['documento_identificacion'], ['documento_identificativo.id_documento'], ),
    sa.ForeignKeyConstraint(['especialidad'], ['especialidades.id_especialidad'], ),
    sa.ForeignKeyConstraint(['id_user'], ['users.id_user'], ),
    sa.PrimaryKeyConstraint('id_medico'),
    sa.UniqueConstraint('documento_identificacion'),
    sa.UniqueConstraint('especialidad'),
    sa.UniqueConstraint('id_user'),
    sa.UniqueConstraint('matricula')
    )
    op.create_table('pacientes',
    sa.Column('id_pacientes', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('documento_identificacion', sa.Integer(), nullable=False),
    sa.Column('especialidad', sa.Integer(), nullable=False),
    sa.Column('matricula', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['documento_identificacion'], ['documento_identificativo.id_documento'], ),
    sa.ForeignKeyConstraint(['especialidad'], ['especialidades.id_especialidad'], ),
    sa.ForeignKeyConstraint(['id_user'], ['users.id_user'], ),
    sa.PrimaryKeyConstraint('id_pacientes'),
    sa.UniqueConstraint('documento_identificacion'),
    sa.UniqueConstraint('especialidad'),
    sa.UniqueConstraint('id_user'),
    sa.UniqueConstraint('matricula')
    )
    op.create_table('reviews',
    sa.Column('id_review', sa.Integer(), nullable=False),
    sa.Column('id_medico', sa.Integer(), nullable=False),
    sa.Column('id_paciente', sa.Integer(), nullable=False),
    sa.Column('calificacion', sa.Integer(), nullable=True),
    sa.Column('comentario', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_medico'], ['medicos.id_medico'], ),
    sa.ForeignKeyConstraint(['id_paciente'], ['pacientes.id_pacientes'], ),
    sa.PrimaryKeyConstraint('id_review')
    )
    op.create_table('turnos',
    sa.Column('id_turno', sa.Integer(), nullable=False),
    sa.Column('id_medico', sa.Integer(), nullable=False),
    sa.Column('id_paciente', sa.Integer(), nullable=False),
    sa.Column('hora_entrada', sa.DateTime(), nullable=False),
    sa.Column('hora_salida', sa.DateTime(), nullable=False),
    sa.Column('completado_exitosamente', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_medico'], ['medicos.id_medico'], ),
    sa.ForeignKeyConstraint(['id_paciente'], ['pacientes.id_pacientes'], ),
    sa.PrimaryKeyConstraint('id_turno')
    )
    op.create_table('consultas',
    sa.Column('id_consulta', sa.Integer(), nullable=False),
    sa.Column('id_turno', sa.Integer(), nullable=False),
    sa.Column('diagnostico', sa.String(), nullable=True),
    sa.Column('descripcion', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_turno'], ['turnos.id_turno'], ),
    sa.PrimaryKeyConstraint('id_consulta'),
    sa.UniqueConstraint('id_turno')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('consultas')
    op.drop_table('turnos')
    op.drop_table('reviews')
    op.drop_table('pacientes')
    op.drop_table('medicos')
    op.drop_table('users_roles')
    op.drop_table('users')
    op.drop_table('especialidades')
    op.drop_table('documento_identificativo')
    # ### end Alembic commands ###
